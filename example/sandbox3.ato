# some_ic.ato
class SomeIC:
    # create the nets named "vcc" and "gnd" attached to pins 1 and 2 on the package respectively
    # nets that are created must have some connections
    net vcc: 1
    net gnd: 2

    # voltage between vcc and gnd must be lower than 4V
    # -> all of the voltages observed between vcc and gnd must be within limit
    limit V[vcc:gnd] < 4V

    # voltage between vcc and gnd must possibly be greater than 2.5V. eg.; to switch the device on
    # -> some of the voltages observed must
    limit V[vcc:gnd] ?> 2.5V

    # the voltage between all nets (other than gnd) and gnd must be within spec'd range
    limit -0.5V < V[*:gnd] < V[vcc:gnd] + 0.5V

    # features are enabled optionally
    # this feature is named "i2c"
    # if enabled, the conditions spec'd inside the feature's scope are required
    feature i2c from I2c:
        """
        This is a docstring
        """

        # all outer namespaces are inherited (vcc, gnd etc... from both outer scope and file)
        net sda: 3
        net scl: 4

        # define limits
        limit V[sda:gnd].on > 2.5V
        limit V[sda:gnd].off < 0.5V
        limit V[scl:gnd].on > 2.5V
        limit V[scl:gnd].off < 0.5V

        # voltage/protocol assignments
        V[sda:gnd].on := (2.8V -> V[vcc:gnd]) + I[sda:gnd] * 20kR
        V[sda:gnd].off := (0V -> 0.5V) + I[sda:gnd] * 20kR
        V[scl:gnd].on := (2.8V -> V[vcc:gnd]) + I[scl:gnd] * 20kR
        V[scl:gnd].off := (0V -> 0.5V) + I[scl:gnd] * 20kR

        P[sda:gnd].i2c.speed := 400kHz
        P[sda:gnd].i2c.address := 0x32


feature I2c(vcc):
    net sda
    net scl

    limit V[sda:gnd].on > 50% * vcc
    limit V[sda:gnd].off < 50% * vcc

    P[sda:gnd].protocol == i2c
    abstract P[sda:gnd].i2c.speed
    abstract P[sda:gnd].i2c.address


class LevelShifter:
    net vcc: 1
    net gnd: 2
    net a: 3
    net b: 4

    P[a:gnd] = P[b:gnd]

class SomeMicro:
    feature i2c from I2c:
        net sda: 3
        net scl: 4

    feature i2c:
        P[sda:gnd].i2c.address = {
            0x32 if 0V < V[addr:gnd] < 0.5V,
            0x33 if 0V < V[addr:gnd] < 0.5V,
            0x34 if 0V < V[addr:gnd] < 0.5V,
        }
